import numpy as np


def move_east(in_matrix):
    out_matrix = in_matrix.copy()
    for i, line in enumerate(out_matrix):
        for j, x in enumerate(line):
            if in_matrix[i][j] != '>':
                continue
            if j != in_matrix.shape[1] - 1:
                if in_matrix[i][j+1] == '.':
                    out_matrix[i][j] = '.'
                    out_matrix[i][j+1] = '>'
            else:
                if in_matrix[i][0] == '.':
                    out_matrix[i][j] = '.'
                    out_matrix[i][0] = '>'
    return out_matrix


def move_south(in_matrix):
    out_matrix = in_matrix.copy()
    for i, line in enumerate(out_matrix):
        for j, x in enumerate(line):
            if in_matrix[i][j] != 'v':
                continue
            if i != in_matrix.shape[0] - 1:
                if in_matrix[i+1][j] == '.':
                    out_matrix[i][j] = '.'
                    out_matrix[i+1][j] = 'v'
            else:
                if in_matrix[0][j] == '.':
                    out_matrix[i][j] = '.'
                    out_matrix[0][j] = 'v'
    return out_matrix


def return_moves(in_matrix):
    count = 0
    m1 = move_east(in_matrix)
    m2 = move_south(m1)
    while True:
        m1 = move_east(in_matrix)
        m2 = move_south(m1)
        if not (in_matrix == m2).all():
            count += 1
            in_matrix = m2
        else:
            return count + 1


def parse_txt(file_path):
    f = open(file_path).read().split('\n')
    initial_state = np.zeros((len(f), len(f[0]))).astype(str)
    for i, line in enumerate(f):
        for j, x in enumerate(line):
            initial_state[i][j] = x
    return initial_state


def main():
    initial_state = parse_txt('input.txt')
    print(initial_state[0][1])


if __name__ == '__main__':
    main()
###################3
                if i != w - 1:
                    if m1[i + 1][j] == '.':
                        moved = True
                        m2[i][j] = '.'
                        m2[i + 1][j] = 'v'
                else:
                    if m1[0][j] == '.':
                        moved = True
                        m2[i][j] = '.'
                        m2[0][j] = 'v'